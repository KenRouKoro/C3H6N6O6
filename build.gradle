plugins {
    id 'fabric-loom' version '0.12.1'
    id 'maven-publish'
    id "io.freefair.lombok" version "6.4.3"
}

version = project.mod_version
group = project.maven_group

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
    mavenLocal()
    maven { url = "https://maven.shedaniel.me/" }
    maven { url = "https://maven.terraformersmc.com/releases/" }
    maven {
        name "Modmaven"
        url "https://modmaven.dev/"
        // For Gradle 5.1 and above, limit it to just AE2
        content {
            includeGroup 'appeng'
        }
    }
    mavenCentral()
    maven { url = "https://api.modrinth.com/maven" }
    maven { url = "https://cursemaven.com" }
    maven { url = "https://maven.parchmentmc.org" }
    maven { url = "https://maven.fabricmc.net/" }
    maven { url = "https://maven.tterrag.com/" }
    maven { url = "https://storage.googleapis.com/devan-maven/" }
    maven { url = "https://maven.shedaniel.me/" }
    maven { url = "https://aperlambda.github.io/maven" }
    maven { url = "https://ladysnake.jfrog.io/artifactory/mods" }
    maven { url = "https://maven.kotlindiscord.com/repository/terraformers/" }
    maven { url = "https://mvn.devos.one/releases/" }
    maven { url = "https://mvn.devos.one/snapshots/" }
    maven { url = "https://maven.terraformersmc.com/" }
    maven { url = "https://maven.cafeteria.dev" }
    maven { url = "https://jitpack.io/" }
    maven { url = "https://maven.jamieswhiteshirt.com/libs-release" }
    maven { url = "https://maven.gegy.dev" }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    implementation 'cn.hutool:hutool-all:5.8.1'

    compileOnly "appeng:appliedenergistics2:11.0.0-alpha.5"
    modImplementation "RebornCore:RebornCore-unknown:5.2.0+local"
    modImplementation "TechReborn:TechReborn-unknown:5.2.0+local"
    //modImplementation "com.simibubi:CreateFabric:mc1.18.2_v0.4.1"
}

processResources {
    inputs.property "version", project.version
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archives_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

loom {
    accessWidenerPath = file("src/main/resources/c3h6n6o6.accesswidener")
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
